<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1540.v295eccc9778f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2255.v56a_15e805f12"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2255.v56a_15e805f12">
      <jobProperties/>
      <triggers/>
      <parameters>
        <string>TARGET_JOB_NAME</string>
      </parameters>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>TARGET_JOB_NAME</name>
          <description>Имя pipeline, из которого нужно удалить файлы в archive</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>Save_Grafanas_Dashboard_with_Python</string>
              <string>Другой_пайплайн</string>
              <string>Еще_один_пайплайн</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@4150.ve20ca_b_a_a_2815">
    <script>pipeline {
    agent any
    
    parameters {
        choice(
            name: &apos;TARGET_JOB_NAME&apos;, 
            description: &apos;Имя pipeline, из которого нужно удалить файлы в archive&apos;, 
            choices: [&apos;Save_Grafanas_Dashboard_with_Python&apos;, &apos;Другой_пайплайн&apos;, &apos;Еще_один_пайплайн&apos;] // Добавьте здесь все нужные варианты
        )
    }
    
    stages {
        stage(&apos;Cleanup Files&apos;) {
            steps {
                script {
                    def jenkinsHome = sh(script: &apos;echo $JENKINS_HOME&apos;, returnStdout: true).trim()
                    def targetDir = &quot;${jenkinsHome}/jobs/${params.TARGET_JOB_NAME}/builds&quot;
                    
                    echo &quot;Начинаем очистку архивных файлов в ${targetDir}/**/archive/&quot;
                    
                    // Удаляем все файлы в папках archive
                    def deleteCommand = &quot;&quot;&quot;
                        if [ -d &quot;${targetDir}&quot; ]; then
                            find &quot;${targetDir}&quot; -path &quot;*/archive/*&quot; -type f -delete
                            echo &quot;Удаление завершено&quot;
                        else
                            echo &quot;Директория ${targetDir} не найдена!&quot;
                            exit 1
                        fi
                    &quot;&quot;&quot;
                    
                    def result = sh(script: deleteCommand, returnStatus: true)
                    
                    if (result == 0) {
                        echo &quot;Все файлы в archive успешно удалены для pipeline ${params.TARGET_JOB_NAME}&quot;
                    } else {
                        error &quot;Ошибка при удалении файлов (код: ${result})&quot;
                    }
                }
            }
        }
    }
    
    post {
        always {
            echo &quot;Процесс очистки завершен для ${params.TARGET_JOB_NAME}&quot;
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>